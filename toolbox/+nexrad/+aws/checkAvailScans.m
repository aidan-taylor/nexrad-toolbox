function [missingScans, presentScans] = checkAvailScans(availScans, location, awsStructure)
	%CHECKAVAILSCANS Checks if scans are already downloaded to local drive.
	% This is a wrapper for nexrad.aws.resources.checkAvailScans.py
	%
	% =================
	% INPUTS (Required)
	% =================
	% availScansPy (1,N) nexrad.aws.resources.AwsNexradFile
	%		Object array containing the metadata for the available scans.
	%		This is typically generated by nexrad.aws.queryAvailScans.
	%
	% =================
	% INPUTS (Optional)
	% =================
	% location (1,1) string
	%		Path to the folder to check. Typically this will be the same folder
	%		the missing files will be downloaded to. By default this is the
	%		current folder.
	%
	% awsStructure (1,1) logical
	%		Checks AWS bucket folder structure if used (true, default). Checks
	%		only current folder (false).
	%
	% =======
	% OUTPUTS
	% =======
	% missingScans (1,M) nexrad.aws.resources.AwsNexradFile
	%		Object array containing the metadata for the files not in the
	%		specifed folder (these need downloading).
	%
	% presentScans (1,L) nexrad.aws.resources.LocalNexradFile
	%		Object array containing the metadata for the files present in the
	%		specified folder (these have been downloaded).
	
	arguments
		availScans (1,:) nexrad.aws.resources.AwsNexradFile
		location (1,1) string = fullfile(tempdir, "NEXRAD-Database");
		awsStructure (1,1) logical = true;
	end
	
	% For glob, we need to ensure the filesep is forward slash to prevent string codes
	location = strrep(location, '\', '/');
	
	% Run python code and return the missing scans
	[missingScansPy, presentScansPy] = pyrunfile("+nexrad/+aws/+resources/checkAvailScans.py", ...
		["missingScans", "presentScans"], availScans=availScans.aslist, location=location, awsStructure=awsStructure);
	
	% Convert to matlab friendly format
	if ~isempty(missingScansPy)
		missingScans = nexrad.aws.resources.AwsNexradFile(missingScansPy);
	else
		missingScans = nexrad.aws.resources.AwsNexradFile.empty(1,0);
	end
	
	if ~isempty(presentScansPy)
		presentScans = nexrad.aws.resources.LocalNexradFile(presentScansPy, location, awsStructure);
	else
		presentScans = nexrad.aws.resources.LocalNexradFile.empty(1,0);
	end